dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(qgis, 0.0.13)
AC_PROG_LIBTOOL()
#AC_CONFIG_HEADERS()
#AC_CONFIG_COMMANDS([src/Makefile], [$QTDIR/bin/qmake -o src/Makefile src/src.pro])
gw_CHECK_QT
dnl ---------------------------------------------------------------------------
dnl GDAL/OGR
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(gdal,
  [  --with-gdal=path/gdal-config    Full path to 'gdal-config' script, 
                                  e.g. '--with-gdal=/usr/local/bin/gdal-config' 
  ],
  [ if test -f "$with_gdal" ; then
      GDAL_CONFIG="$with_gdal"
    else
      AC_MSG_ERROR("Cannot find $with_gdal")
    fi
  ],
  [ 
    GDAL_CONFIG=`which gdal-config`
    if test ! -f "$GDAL_CONFIG" ; then
      AC_MSG_ERROR(["Cannot find gdal-config, try to use --with-gdal option"])
    fi
  ]
)

AC_MSG_CHECKING([for GDAL/OGR])
if test ! -x "$GDAL_CONFIG" ; then
  AC_MSG_ERROR([Cannot execute gdal-config, check permissions])
fi

if test `$GDAL_CONFIG --ogr-enabled` = "no" ; then
  AC_MSG_ERROR([GDAL is compiled without OGR support.])
fi
AC_MSG_RESULT(yes)
AC_MSG_CHECKING([for GDAL libs])
GDAL_LIB="`$GDAL_CONFIG --libs`"
AC_MSG_RESULT([$GDAL_LIB])
GDAL_CFLAGS="`$GDAL_CONFIG --prefix`/include"


AC_SUBST(GDAL_LIB)
AC_SUBST(GDAL_CFLAGS)

dnl ---------------------------------------------------------------------------
dnl PostgreSQL
dnl ---------------------------------------------------------------------------
PG_CONFIG=no

AC_ARG_WITH(pg,[  --with-pg=path/pg_config PostgreSQL (PostGIS) Support 
                           (full path to pg_config)],,)

if test "$with_pg" = "yes" -o "$with_pg" = "" ; then
  AC_PATH_PROG(PG_CONFIG, pg_config, no)
else
  PG_CONFIG=$with_pg
fi

AC_MSG_CHECKING([for PostgreSQL])

if test "$PG_CONFIG" = "no" ; then
  PG_LIB=
  PG_INC=

  AC_MSG_RESULT([no])
else
  HAVE_PG=1
  PG_LIB="-L`$PG_CONFIG --libdir` -lpq++"
  PG_INC="`$PG_CONFIG --includedir`"
  AC_MSG_RESULT([yes])
  AC_MSG_CHECKING([for postgreSQL libs])
  AC_MSG_RESULT([$PG_LIB])
fi

AC_SUBST(HAVE_PG)
AC_SUBST(PG_INC)
AC_SUBST(PG_LIB)

dnl ---------------------------------------------------------------------------
dnl GRASS and GRASS++ package
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(grass,[  --with-grass=DIR         GRASS Support 
                           (full path to GRASS binary package, e.g.
                           --with-grass=/usr1/grass51/dist.i686-pc-linux-gnu])

AC_ARG_WITH(grasspp,[  --with-grasspp=DIR       Full path to GRASS++ binary package])

AC_MSG_CHECKING([for GRASS])
if test -n "$with_grass"; then
  # I don't know how to add library path to AC_CHECK_LIB()
  GISLIB=`ls $with_grass/lib/libgrass_gis.*`  
  if test ! -f "$GISLIB"; then
      AC_MSG_ERROR( [GRASS library not found] )
  fi
  GRASSPPLIB=`ls $with_grasspp/libgrass++.*`  
  if test ! -f "$GRASSPPLIB"; then
      AC_MSG_ERROR( [GRASS++ library not found] )
  fi
  GRASS_LIB="-L$with_grass/lib/ -L$with_grasspp -lgrass_vect -lgrass_dig2 -lgrass_dbmiclient -lgrass_dbmibase -lgrass_shape -lgrass_dgl -lgrass_rtree -lgrass_gis -lgrass_datetime -lgrass_linkm -lgrass_form -lgrass++"
 
  GISINC=`ls $with_grass/include/gis.h`
  if test ! -f "$GISINC"; then
      AC_MSG_ERROR( [GRASS headers not found] )
  fi
  GRASSPPINC=`ls $with_grasspp/GRASS.h`  
  if test ! -f "$GRASSPPINC"; then
      AC_MSG_ERROR( [GRASS++ headers not found] )
  fi
  GRASS_INC="$with_grass/include/ $with_grasspp/"
  HAVE_GRASS=1
  AC_MSG_RESULT([yes])
else 
  AC_MSG_RESULT([no])
fi

AC_SUBST(HAVE_GRASS)
AC_SUBST(GRASS_LIB)
AC_SUBST(GRASS_INC)
#AC_MSG_RESULT([$HAVE_PG])
AM_CONDITIONAL(POSTGRESDB, test x$HAVE_PG = x1)
dnl *** Autoconf output *****************************
AC_CONFIG_FILES([
   Makefile
   src/Makefile
])
AC_OUTPUT
#AC_OUTPUT([
#src/platform.pro
#])

